// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testsuite.proxies;

/**
 * 
 */
public class Color
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject colorMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestSuite.Color";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		RAL("RAL"),
		IsPrimary("IsPrimary"),
		ColorCode("ColorCode"),
		RangeMin("RangeMin"),
		RangeMax("RangeMax"),
		Color_Entity("TestSuite.Color_Entity"),
		Entity_3_Color("TestSuite.Entity_3_Color");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Color(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestSuite.Color"));
	}

	protected Color(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject colorMendixObject)
	{
		if (colorMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestSuite.Color", colorMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestSuite.Color");

		this.colorMendixObject = colorMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Color.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testsuite.proxies.Color initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testsuite.proxies.Color.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static testsuite.proxies.Color initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testsuite.proxies.Color(context, mendixObject);
	}

	public static testsuite.proxies.Color load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testsuite.proxies.Color.initialize(context, mendixObject);
	}

	public static java.util.List<testsuite.proxies.Color> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testsuite.proxies.Color> result = new java.util.ArrayList<testsuite.proxies.Color>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestSuite.Color" + xpathConstraint))
			result.add(testsuite.proxies.Color.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of RAL
	 */
	public final Integer getRAL()
	{
		return getRAL(getContext());
	}

	/**
	 * @param context
	 * @return value of RAL
	 */
	public final Integer getRAL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.RAL.toString());
	}

	/**
	 * Set value of RAL
	 * @param ral
	 */
	public final void setRAL(Integer ral)
	{
		setRAL(getContext(), ral);
	}

	/**
	 * Set value of RAL
	 * @param context
	 * @param ral
	 */
	public final void setRAL(com.mendix.systemwideinterfaces.core.IContext context, Integer ral)
	{
		getMendixObject().setValue(context, MemberNames.RAL.toString(), ral);
	}

	/**
	 * @return value of IsPrimary
	 */
	public final Boolean getIsPrimary()
	{
		return getIsPrimary(getContext());
	}

	/**
	 * @param context
	 * @return value of IsPrimary
	 */
	public final Boolean getIsPrimary(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsPrimary.toString());
	}

	/**
	 * Set value of IsPrimary
	 * @param isprimary
	 */
	public final void setIsPrimary(Boolean isprimary)
	{
		setIsPrimary(getContext(), isprimary);
	}

	/**
	 * Set value of IsPrimary
	 * @param context
	 * @param isprimary
	 */
	public final void setIsPrimary(com.mendix.systemwideinterfaces.core.IContext context, Boolean isprimary)
	{
		getMendixObject().setValue(context, MemberNames.IsPrimary.toString(), isprimary);
	}

	/**
	 * @return value of ColorCode
	 */
	public final String getColorCode()
	{
		return getColorCode(getContext());
	}

	/**
	 * @param context
	 * @return value of ColorCode
	 */
	public final String getColorCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ColorCode.toString());
	}

	/**
	 * Set value of ColorCode
	 * @param colorcode
	 */
	public final void setColorCode(String colorcode)
	{
		setColorCode(getContext(), colorcode);
	}

	/**
	 * Set value of ColorCode
	 * @param context
	 * @param colorcode
	 */
	public final void setColorCode(com.mendix.systemwideinterfaces.core.IContext context, String colorcode)
	{
		getMendixObject().setValue(context, MemberNames.ColorCode.toString(), colorcode);
	}

	/**
	 * @return value of RangeMin
	 */
	public final java.math.BigDecimal getRangeMin()
	{
		return getRangeMin(getContext());
	}

	/**
	 * @param context
	 * @return value of RangeMin
	 */
	public final java.math.BigDecimal getRangeMin(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.RangeMin.toString());
	}

	/**
	 * Set value of RangeMin
	 * @param rangemin
	 */
	public final void setRangeMin(java.math.BigDecimal rangemin)
	{
		setRangeMin(getContext(), rangemin);
	}

	/**
	 * Set value of RangeMin
	 * @param context
	 * @param rangemin
	 */
	public final void setRangeMin(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal rangemin)
	{
		getMendixObject().setValue(context, MemberNames.RangeMin.toString(), rangemin);
	}

	/**
	 * @return value of RangeMax
	 */
	public final java.math.BigDecimal getRangeMax()
	{
		return getRangeMax(getContext());
	}

	/**
	 * @param context
	 * @return value of RangeMax
	 */
	public final java.math.BigDecimal getRangeMax(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.RangeMax.toString());
	}

	/**
	 * Set value of RangeMax
	 * @param rangemax
	 */
	public final void setRangeMax(java.math.BigDecimal rangemax)
	{
		setRangeMax(getContext(), rangemax);
	}

	/**
	 * Set value of RangeMax
	 * @param context
	 * @param rangemax
	 */
	public final void setRangeMax(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal rangemax)
	{
		getMendixObject().setValue(context, MemberNames.RangeMax.toString(), rangemax);
	}

	/**
	 * @return value of Color_Entity
	 */
	public final testsuite.proxies.Entity getColor_Entity() throws com.mendix.core.CoreException
	{
		return getColor_Entity(getContext());
	}

	/**
	 * @param context
	 * @return value of Color_Entity
	 */
	public final testsuite.proxies.Entity getColor_Entity(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testsuite.proxies.Entity result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Color_Entity.toString());
		if (identifier != null)
			result = testsuite.proxies.Entity.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Color_Entity
	 * @param color_entity
	 */
	public final void setColor_Entity(testsuite.proxies.Entity color_entity)
	{
		setColor_Entity(getContext(), color_entity);
	}

	/**
	 * Set value of Color_Entity
	 * @param context
	 * @param color_entity
	 */
	public final void setColor_Entity(com.mendix.systemwideinterfaces.core.IContext context, testsuite.proxies.Entity color_entity)
	{
		if (color_entity == null)
			getMendixObject().setValue(context, MemberNames.Color_Entity.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Color_Entity.toString(), color_entity.getMendixObject().getId());
	}

	/**
	 * @return value of Entity_3_Color
	 */
	public final java.util.List<testsuite.proxies.Entity_3> getEntity_3_Color() throws com.mendix.core.CoreException
	{
		return getEntity_3_Color(getContext());
	}

	/**
	 * @param context
	 * @return value of Entity_3_Color
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<testsuite.proxies.Entity_3> getEntity_3_Color(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<testsuite.proxies.Entity_3> result = new java.util.ArrayList<testsuite.proxies.Entity_3>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Entity_3_Color.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(testsuite.proxies.Entity_3.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Entity_3_Color
	 * @param entity_3_color
	 */
	public final void setEntity_3_Color(java.util.List<testsuite.proxies.Entity_3> entity_3_color)
	{
		setEntity_3_Color(getContext(), entity_3_color);
	}

	/**
	 * Set value of Entity_3_Color
	 * @param context
	 * @param entity_3_color
	 */
	public final void setEntity_3_Color(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<testsuite.proxies.Entity_3> entity_3_color)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (testsuite.proxies.Entity_3 proxyObject : entity_3_color)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Entity_3_Color.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return colorMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testsuite.proxies.Color that = (testsuite.proxies.Color) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestSuite.Color";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
